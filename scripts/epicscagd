# Utility variables
export MCC_IF=172.21.40.20
export CDS_IF=172.21.35.20
export FEE_IF=172.21.36.20
export AMO_IF=172.21.37.20
export DEV_IF=134.79.165.20
export XPP_IF=172.21.38.20
export SXR_IF=172.21.39.20
export XCS_IF=172.21.43.20
export CXI_IF=172.21.44.20
export MEC_IF=172.21.45.20
export THZ_IF=172.21.57.20

export MCC_GW=172.27.224.220
export MCC_BC=172.27.11.255
export CDS_BC=172.21.35.255
export FEE_BC=172.21.36.255
export AMO_BC=172.21.37.255
export DEV_BC=134.79.165.255
export XPP_BC=172.21.38.255
export SXR_BC=172.21.39.255
export XCS_BC=172.21.43.255
export CXI_BC=172.21.44.255
export MEC_BC=172.21.45.255
export THZ_BC=172.21.57.255

# Common to all
export EPICS_CA_BEACON_PERIOD=20.0
export EPICS_CA_CONN_TMO=60.0
export EPICS_CA_MAX_ARRAY_BYTES=4000000
export EPICS_CA_AUTO_ADDR_LIST=NO
export EPICS_CAS_AUTO_BEACON_ADDR_LIST=NO
export EPICS_CAS_IGNORE_ADDR_LIST="$MCC_IF $CDS_IF $FEE_IF $AMO_IF $DEV_IF $XPP_IF $SXR_IF $XCS_IF $CXI_IF $MEC_IF $THZ_IF"
export EPICS_CAS_BEACON_ADDR_LIST="$MCC_BC:5069 $CDS_BC:5065 $FEE_BC:5065 $AMO_BC:5065 $DEV_BC:5065 $XPP_BC:5065 $SXR_BC:5065 $XCS_BC:5065 $CXI_BC:5065 $MEC_BC:5065 $THZ_BC:5065"
export DAEMON_COREFILE_LIMIT="unlimited"

# Common to most
export EPICS_CA_SERVER_PORT=5064
export EPICS_CAS_SERVER_PORT=5064

# Need to be specified for each gateway
# export EPICS_CA_ADDR_LIST=$AMO_BC
# export EPICS_CAS_INTF_ADDR_LIST="$CDS_IF $FEE_IF $DEV_IF $XPP_IF $SXR_IF $XCS_IF $CXI_IF"

cagvardir="/u1/gateway"
caglockdir="/var/lock/subsys"
cagprogram="/reg/g/pcds/package/epics/3.14-dev/extensions/R3.14.11-0.0.0/bin/linux-x86_64/gateway"
caput="/reg/g/pcds/package/epics/3.14/base/current/bin/linux-x86_64/caput"
daemonuser="psca"

cagstart() {
	# Check if this gateway is already running
	test -x $cagprogram || (echo "Program $cagprogram doesn't exist" && exit 0)
	if [ ! -f $caglockdir/epicscagd-$1 ]; then
	    echo -n "Starting $1 gateway"
	    daemon $cagprogram -home $cagvardir/$1 -pvlist $cagvardir/config/$1.pvlist -access $cagvardir/config/$1.access -prefix $2 -server
	    RETVAL=$?
	    [ $RETVAL -eq 0 ] && touch $caglockdir/epicscagd-$1
	    echo
	fi
	return $RETVAL
}

cagstop() {
	echo -n "Stopping $1 gateway"
	source $cagvardir/$1/gateway.killer
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f $caglockdir/epicscagd-$1
	echo
        return $RETVAL
}


cagrestart() {
	source $cagvardir/$1/gateway.restart
}	

cagreload() {
 	$caput $1:newAsFlag 1
}
