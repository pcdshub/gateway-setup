#!/bin/bash
#
#	/etc/rc.d/init.d/epicscagd-reverse
#
# Starts the reverse EPICS CAG gateway to allow
# each hutch R/W access to it's gateway status PVs.
#
# chkconfig: - 99 1
# description: EPICS Channel Access Gateway
# processname: epicscagd-reverse

# Source function library.
. /etc/init.d/functions
. /etc/init.d/epicscagp

gwname=reverse
gwprefix=NET:CAG:REVERSE
gwprocport=30611
export gwHostNum=06

export EPICS_CA_ADDR_LIST=$DEV_BC
export EPICS_CAS_INTF_ADDR_LIST=`echo $PSCAG06_IFLIST`
# Note: Can't exclude DEV_IF as that's how we RW the gateway NET:CAG:REVERSE:.* PVs
#export EPICS_CAS_INTF_ADDR_LIST=`echo $PSCAG06_IFLIST | sed -e "s%${DEV_IF06}%%"`

#export EPICS_CAS_IGNORE_ADDR_LIST=`echo $ALL_PSCAG_IFLIST | sed -e "s%${DEV_IF06}%%"`
cagprogram="/cds/group/pcds/epics/extensions/gateway/R2.1.3.0-1.1.0/bin/$EPICS_HOST_ARCH/gateway"

# Add -no_cache to gwargs to disable caching in gateway
# With -no_cache, CA updates are passed along to clients w/o pre-fetching the value.
#gwargs="$gwargs -no_cache"
#gwargs="$gwargs -access $cagcfgdir/pcds-access-rev.acf"

case "$1" in
start)
	echo Running: cagstart $gwname $gwprefix $gwprocport $gwargs
	cagstart $gwname $gwprefix $gwprocport $gwargs
	;;
name)
	echo "Gateway $gwname (prefix $gwprefix) runs on procServ port $gwprocport"
	;;
*)
	echo $"Usage: $0 {start|name}"
	exit 1
esac

exit $?
